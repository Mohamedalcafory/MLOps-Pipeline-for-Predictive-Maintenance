[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "predictive-maintenance-mlops"
version = "0.1.0"
description = "End-to-end MLOps pipeline for predictive maintenance with LSTM, FastAPI, and automated retraining"
authors = [
    {name = "Mohamed Alcafory", email = "mohamed.alcafory.456@gmail.com"}
]
requires-python = ">=3.11"
dependencies = [
    # ML and Data Science
    "torch>=2.1.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "xgboost>=1.7.0",
    
    # MLOps and Tracking
    "mlflow>=2.8.0",
    "optuna>=3.4.0",
    "hyperopt>=0.2.7",
    
    # API and Services
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    
    # Data Processing
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    
    # Monitoring and Observability
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "python-json-logger>=2.0.0",
    
    # Utilities
    "python-decouple>=3.8",
    "click>=8.1.0",
    "tqdm>=4.66.0",
    "joblib>=1.3.0",
    "plotly>=5.17.0",
    "seaborn>=0.12.0",
    "matplotlib>=3.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "notebook>=7.0.0",
    "ipywidgets>=8.1.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "I", "N", "UP", "S", "B", "A", "C4", "T20"]
ignore = ["E501", "S101", "N818"]

[tool.ruff.per-file-ignores]
"*/tests/*" = ["S101", "S106"]
"notebooks/*" = ["T201", "S101"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["torch.*", "sklearn.*", "mlflow.*", "optuna.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--cov=src --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "notebooks/*"
]